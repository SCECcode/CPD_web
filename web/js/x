        window.console.log("insar  -->  calling search..");
        var track_name="D071";

        $searchResult = $("#searchResult");
        if (!type || !criteria) {
            $searchResult.html("");
        }
        if (!Array.isArray(criteria)) {
            criteria = [criteria];
        }

        let JSON_criteria = JSON.stringify(criteria);
window.console.log("calling search() with the type.."+type);
window.console.log("calling search() with the string.."+JSON_criteria);
        $("#wait-spinner").show();
        $.ajax({
            url: "php/search.php",
            data: {t: type, k: this.track_name, q: JSON_criteria},
        }).done(function(cgm_insar_data) {

            let results=[];
            let ncriteria=[];
window.console.log(cgm_insar_data);
            if(cgm_insar_data === "[]") {
window.console.log("Did not find any PHP result");
            } else {
                 let tmp=JSON.parse(cgm_insar_data); 
                 let jblob=JSON.parse(tmp[0].replace(/'/g,'"'));
/*****
[{'gid':'label1', 
'tslist':[{'lat':35.32064,'lon':-116.57164,'velocity':v,'track':'D071','file':'pixel_-116.57164_35.32064_D071.csv'}, 
       {'lat':34.0522,'lon':-118.2437,'velocity':v,'track':'D071','file':'pixel_-118.2437_34.0522_D071.csv'}]},
{'gid':'label1',
 'tslist':[{'lat':35.32064,'lon':-116.57164,'velocity':v,'track':'D077','file':'pixel_-116.57164_35.32064_D077.csv'},
        {'lat':34.0522,'lon':-118.2437,'velocity':v,'track':'D077','file':'pixel_-118.2437_34.0522_D077.csv'}]}]
****/
                 for(let i=0; i< jblob.length; i++) {
                     let item=jblob[i];
                     let ngid=item['gid']
                     if(type==CGM_INSAR.searchType.location) {
                         let tslist=item['tslist'];
                         for(let j=0; j<tslist.length; j++) {
                             let ts=tslist[j];
                             let nlat=ts['lat'];
                             let nlon=ts['lon'];
                             let nvelocity=ts['velocity'];
                             let track_name=ts['track']
                             let file=ts['file'];
                               // create a ncriteria
                              ncriteria.push(nlat);
                              ncriteria.push(nlon);
                              let marker_layer=L.circleMarker([nlat,nlon],cgm_marker_style.normal);
                              marker_layer.scec_properties = {
                                    track: track_name,
                                    lat: nlat,
                                    lon: nlon,
                                    file: file,
                                    velocity: nvelocity,
                                    type: type,
                                    gid: ngid,
                                    selected: false,
                                    };
                              let bb_info = `track:${track_name}<br>lat:${nlat} lon:${nlon}`;
                              marker_layer.bindTooltip(bb_info);

                              results.push(marker_layer);
                         }
                     } else if(type==CGM_INSAR.searchType.latlon) {
/*
["[{'gid': 'insar_612e946b8f597', 'vlist': 
[{'bb': [[-118.3172607421875, 33.84290273847109], [-118.20739746093751, 33.961443911623384]], 'track': 'D071', 'file': '/app/web/result/insar_612e946b8f597_D071/velocity_list.json'}]}]"]
*/
                         let vlist=item['vlist'];
                         for(let j=0; j<vlist.length; j++) {

                             let v=vlist[j];
                             let bb=v['bb'];
// XXX should not be chopping here..
                             let nlon1=truncateNumber(bb[0][0],4);
                             let nlat1=truncateNumber(bb[0][1],4);
                             let nlon2=truncateNumber(bb[1][0],4);
                             let nlat2=truncateNumber(bb[1][1],4);
                             let file=v['file'];
                             let track_name=v['track'];
                             let nx=v['nx'];
                             let ny=v['ny'];

                             // create a ncriteria
                             ncriteria.push(nlat1);
                             ncriteria.push(nlon1);
                             ncriteria.push(nlat2);
                             ncriteria.push(nlon2);

                             let url = getDataDownloadURL(file);

                             let rc = makeOnePixiLayer(ngid,url);
                             let pixilayer = rc["pixiLayer"];
                             let max_v = rc["max_v"];
                             let min_v = rc["min_v"];
                             let count_v = rc["count_v"];
        
 //XXX not tracking it or else only 1 can be made and left on the map
                             let layer=addRectangleLayer(nlat1,nlon1,nlat2,nlon2);

window.console.log("nx is "+nx+" and ny "+ny);

                             layer.scec_properties = {
                                 velocity_plot : pixilayer, 
                                 max_velocity: max_v,
                                 min_velocity: min_v,
                                 count_velocity: count_v,
                                 track: track_name,
                                 lat: [ nlat1, nlat2 ],
                                 lon: [ nlon1, nlon2 ],
                                 file: file,
                                 type: type,
                                 nx: nx,
                                 ny: ny,
                                 gid: ngid,
                                 selected: false,
                             };
                             let bb_info = `track:${track_name}<br>sw:${nlat1},${nlon1}<br>ne:${nlat2},${nlon2}`;
                             layer.bindTooltip(bb_info);
                             results.push(layer);
                        }
                     }
                 }
            }
            CGM_INSAR.showPHP(type, results, ncriteria);
        });
